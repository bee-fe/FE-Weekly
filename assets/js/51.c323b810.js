(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{437:function(e,t,a){"use strict";a.r(t);var r=a(54),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"小蜜蜂前端周刊第四十五期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小蜜蜂前端周刊第四十五期"}},[e._v("#")]),e._v(" 小蜜蜂前端周刊第四十五期")]),e._v(" "),a("blockquote",[a("p",[e._v("本期文章由 仲晚秋 供稿")])]),e._v(" "),a("h2",{attrs:{id:"个人"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#个人"}},[e._v("#")]),e._v(" 个人")]),e._v(" "),a("h3",{attrs:{id:"关于edm邮件-那些认真踩过的坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于edm邮件-那些认真踩过的坑"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://yomizhong.github.io/2019/10/17/%E5%85%B3%E4%BA%8Eedm%E9%82%AE%E4%BB%B6-%E9%82%A3%E4%BA%9B%E8%AE%A4%E7%9C%9F%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/#more",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于edm邮件--那些认真踩过的坑"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("本文分享在制作edm邮件过程中，遇到的一些问题及解决方案")]),e._v(" "),a("h2",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[e._v("#")]),e._v(" React")]),e._v(" "),a("h3",{attrs:{id:"这可能是最通俗的-react-fiber-打开方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这可能是最通俗的-react-fiber-打开方式"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5dadc6045188255a270a0f85#heading-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("这可能是最通俗的 React Fiber 打开方式"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("写一篇关于 React Fiber 的文章， 这个 Flag 立了很久，这也是今年的目标之一。 最近的在掘金的文章获得很多关注和鼓励，给了我很多动力，所以下定决心好好把它写出来。 我会以最通俗的方式将它讲透, 因此这算是一篇科普式的文章。不管你是使用React、还是Vue，这里面的思想值得学习学习!")]),e._v(" "),a("h3",{attrs:{id:"react-conf-2019"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-conf-2019"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://conf.reactjs.org/schedule.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("REACT CONF 2019"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("React 2019 大会来了，来关注下这次大会会讲哪些内容。")]),e._v(" "),a("h2",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[e._v("#")]),e._v(" Webpack")]),e._v(" "),a("h3",{attrs:{id:"译-webpack-5-之持久化缓存指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#译-webpack-5-之持久化缓存指南"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/oB5eYax_NndcM5IinPgzNQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("[译]webpack 5 之持久化缓存指南"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("继 webpack v5-beta0 发布后，官方又发布了持久化缓存指南。首先，要注意的是默认情况下不会启用持久化缓存。你可以自行选择启用。为何如此？webpack 旨在注重构建安全而非性能。我们没有打算默认启用这一功能，主要原因在于此功能虽然有 95% 几率提升性能，但仍有 5% 的几率中断你的应用程序/工作流/构建。这可能听起来很糟，但相信我它并非如此。只不过需要开发人员进行额外的操作来配置它。")]),e._v(" "),a("h2",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[e._v("#")]),e._v(" Vue")]),e._v(" "),a("h3",{attrs:{id:"vue-3-0-公开代码之后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-0-公开代码之后"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/_9XaMyAv0NjJRvwKEEleuw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 3.0 公开代码之后……"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("源码公开后不久，社区内就有源码解析的文章出现，甚至还有培训课程打出了《从0实现 Vue 3.0 响应式源码》的噱头。尽管有一些“学不动了”的自嘲，社区里对 Vue 3.0 源码开放事件，总体上是一个非常正面的态度。在这种背景下，我注意到了两段争论，一个来自国外社区，一个来自国内；它们围绕不同的主题，却恰好拥有相同的内核。颇有意思，我认为值得分享给大家。")]),e._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);t.default=s.exports}}]);