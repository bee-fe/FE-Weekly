(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{426:function(e,t,a){"use strict";a.r(t);var r=a(54),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"小蜜蜂前端周刊第三十四期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小蜜蜂前端周刊第三十四期"}},[e._v("#")]),e._v(" 小蜜蜂前端周刊第三十四期")]),e._v(" "),a("h2",{attrs:{id:"新鲜事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新鲜事"}},[e._v("#")]),e._v(" 新鲜事")]),e._v(" "),a("h3",{attrs:{id:"react-redux-发布-7-1-0-版本-支持-react-hooks-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-发布-7-1-0-版本-支持-react-hooks-版本"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://github.com/reduxjs/react-redux/releases/tag/v7.1.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("React Redux 发布 7.1.0 版本，支持 React Hooks 版本"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: React Redux 发布 7.1.0 版本，终于支持了 React Hooks 版本的 Redux。在此实现版本废弃了之前提案中的 useRedux 和 useActions，最终保留了 useSelector。此外，useSelector 的默认比较函数由 shallowEqual 换为了引用比对 ===。"),a("strong",[e._v("能被 React Hooks 实现的终将被 React Hooks 实现")]),e._v("。")])]),e._v(" "),a("h3",{attrs:{id:"announcing-styled-components-v5-beast-mode-💪🔥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#announcing-styled-components-v5-beast-mode-💪🔥"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://medium.com/styled-components/announcing-styled-components-v5-beast-mode-389747abd987",target:"_blank",rel:"noopener noreferrer"}},[e._v("Announcing styled-components v5: Beast Mode 💪🔥"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: Styled Components 5 beta 版本发布，该版本由 React Hooks 完全重写，大幅压缩生成的组件层级，更新了 StyleSheetManager 以实现插件机制，最终包体也压缩了 31%。"),a("strong",[e._v("能被 React Hooks 实现的终将被 React Hooks 实现")]),e._v("。")])]),e._v(" "),a("h3",{attrs:{id:"揭秘-vue-3-0-最具潜力的-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#揭秘-vue-3-0-最具潜力的-api"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/72155736",target:"_blank",rel:"noopener noreferrer"}},[e._v("揭秘 Vue 3.0 最具潜力的 API"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: 尤雨溪6月份发布了 Vue Function-based API RFC，说是 3.0 最重要的 RFC。")])]),e._v(" "),a("h2",{attrs:{id:"性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[e._v("#")]),e._v(" 性能")]),e._v(" "),a("h3",{attrs:{id:"长列表渲染实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长列表渲染实践"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/66779396",target:"_blank",rel:"noopener noreferrer"}},[e._v("长列表渲染实践"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: 在 h5 下拉加载更多的场景当中，经常会碰到这种情况：由于加载数据量过大， dom 节点不断累加，从而导致滚动卡顿等用户体验下降的问题。为了解决因为 dom 过多而导致的卡顿问题，当务之急便是减少页面 dom 的渲染。由于手机屏幕高度固定，可见区域只有屏幕大小的地方，因此最理想的方式，便是仅仅渲染屏幕范围内的 dom 节点。")])]),e._v(" "),a("h3",{attrs:{id:"前端学serverless系列-webapplication迁移实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端学serverless系列-webapplication迁移实践"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/72076708",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端学serverless系列——WebApplication迁移实践"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: 说起当前最火的技术，除了最新的区块链，AI，还有一个不得不提的概念是Serverless。Serverless作为一种新型的互联网架构直接或间接推动了云计算的发展，从AWS Lambda到各厂商争先推出Serverless服务框架，Serverless一路高歌。在这个风口，前端好像都要做点什么？")])]),e._v(" "),a("h3",{attrs:{id:"web技巧-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web技巧-13"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/72609733",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web技巧（13）"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("推荐理由: 任何一门语言都有自己的小技巧和新特性，比如Web的三大基石HTML、CSS和JavaScript，在各自的社区中总是有同学在不同的时候梳理一些相关的新特性和小技巧。让这些特性更好的服务于社区，尽量的让大家更好的理解和掌握。另外一个目的是，让更多的同学能把这些新特性运用于自己的项目中。在这一期中，将围绕着JavaScript的一些新特性来展开。希望对大家有所帮助。")])]),e._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);t.default=s.exports}}]);