(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{425:function(e,a,t){"use strict";t.r(a);var r=t(54),n=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"小蜜蜂前端周刊第三十三期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小蜜蜂前端周刊第三十三期"}},[e._v("#")]),e._v(" 小蜜蜂前端周刊第三十三期")]),e._v(" "),t("h2",{attrs:{id:"新鲜事"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新鲜事"}},[e._v("#")]),e._v(" 新鲜事")]),e._v(" "),t("h3",{attrs:{id:"fuchisa-dev"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fuchisa-dev"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://fuchsia.dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fuchisa.dev"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: Documentation for developing for the open source operating system.")])]),e._v(" "),t("h3",{attrs:{id:"geckoview-in-2019"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#geckoview-in-2019"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://hacks.mozilla.org/2019/06/geckoview-in-2019/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GeckoView in 2019"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: Last September we wrote about using GeckoView to bring Firefox’s rendering engine to Android as a reusable library. By decoupling the Gecko engine from the Firefox application, we’ve created a newer, faster, and more maintainable way to create Android applications. This approach leverages Gecko’s excellent performance, privacy, and support for cutting-edge web standards. With today’s release of our GeckoView-powered Firefox Preview, we’d like to share an update on what we’ve accomplished and where GeckoView is going in 2019.")])]),e._v(" "),t("h2",{attrs:{id:"react"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[e._v("#")]),e._v(" React")]),e._v(" "),t("h3",{attrs:{id:"react-fiber-deep-dive-with-dan-abramov"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber-deep-dive-with-dan-abramov"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=aS41Y_eyNrU",target:"_blank",rel:"noopener noreferrer"}},[e._v("React Fiber Deep Dive with Dan Abramov"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: Jani and Phil got a problem. There are too many damn divs! With the help of Jenn Creighton and special guest Dan Abramov, we learn how to hack React Fiber reconciler internals to make the world a less div-ided place. In this deep dive you’ll learn how to contribute to React Fiber, and implement a new rendering mode for React.")])]),e._v(" "),t("h3",{attrs:{id:"the-rise-of-the-nrg-stack-node-js-react-and-graphql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-rise-of-the-nrg-stack-node-js-react-and-graphql"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://levelup.gitconnected.com/the-rise-of-the-nrg-stack-node-js-react-and-graphql-6dfba468ba8a",target:"_blank",rel:"noopener noreferrer"}},[e._v("The rise of the NRG stack: Node.js, React and GraphQL"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: With GraphQL gaining the popularity, React becoming the front-end go-to framework, and after 10 years Node.js is proving it’s here to stay, it appears the NRG stack is becoming a standard for today’s web apps.")])]),e._v(" "),t("h2",{attrs:{id:"js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[e._v("#")]),e._v(" JS")]),e._v(" "),t("h3",{attrs:{id:"why-1-7-11-map-parseint-returns-1-nan-3-in-javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#why-1-7-11-map-parseint-returns-1-nan-3-in-javascript"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://medium.com/dailyjs/parseint-mystery-7c4368ef7b21",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why ['1', '7', '11'].map(parseInt) returns [1, NaN, 3] in Javascript"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: JavaScript 非常怪异，这篇文章会带你领略到怪异之处。")])]),e._v(" "),t("h3",{attrs:{id:"gmtc-2019-蚂蚁金服的前端框架和工程化实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gmtc-2019-蚂蚁金服的前端框架和工程化实践"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/sorrycc/blog/issues/85",target:"_blank",rel:"noopener noreferrer"}},[e._v("GMTC 2019 - 蚂蚁金服的前端框架和工程化实践"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("推荐理由: 在 Umi 和 Bigfish 时代，我们从刀耕火种的时代跨入了工业化时代。因为在此之前，用户需要接触很多技术栈和细节，在 Umi 和 Bigfish 中，用户只要知道一个框架，剩下的全部不用了解。框架像一个魔法球，把各种技术栈吸到一起，加工后吐给用户，以此来支撑业务。")])]),e._v(" "),t("comment-comment")],1)}),[],!1,null,null,null);a.default=n.exports}}]);